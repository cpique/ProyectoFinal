@model IEnumerable<ProyectoFinal.Models.Client>
@using MvcContrib.UI.Pager
@using MvcContrib.Pagination
@using ProyectoFinal.Utils
@{
    ViewBag.Title = "Index";
}

<h2>Usuarios</h2>
<p>
    @Html.ActionLink("Crea un nuevo usuario", "Create")
</p>
<hr />
<div class="container">
    @using (Html.BeginForm("Index", "Clients", FormMethod.Get, new { @class = "form-horizontal" }))
    {
        <div class="form-group">
            <label class="control-label col-sm-2" for="email">Buscar por nombre:</label>
            <div class="col-sm-10">
                @Html.TextBox("SearchString", null, new { @class = "form-control text-box single-line" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-sm-offset-2 col-sm-10">
                <input type="submit" class="btn btn-default" value="Buscar" />
            </div>
        </div>
    }
</div>


@Html.Raw(@Html.Pager((IPagination)Model)
                .Format("Mostrando {0}-{1} de {2} | ")
                .First("Primero")
                .Previous("Anterior")
                .Next("Siguiente")
                .Last("Último")
         )
<table class="table table-striped">
    <tr class="success">
        <th>
            @Html.DisplayNameFor(model => model.FirstName)
        </th>
        <th>
            @Html.ActionLink(@Html.DisplayNameFor(model => model.LastName).ToString(), "Index", new { sortOrder = ViewBag.SurnameSortParm })
        </th>
        <th>
            @Html.DisplayNameFor(model => model.DocType)
        </th>
        <th>
            @Html.ActionLink(@Html.DisplayNameFor(model => model.DocNumber).ToHtmlString(), "Index", new { sortOrder = ViewBag.DocNumberSortParm })
        </th>
        <th>
            @Html.ActionLink(@Html.DisplayNameFor(model => model.BirthDate).ToString(), "Index", new { sortOrder = ViewBag.BirthDateSortParm })
        </th>
        <th>
            @Html.ActionLink(@Html.DisplayNameFor(model => model.Email).ToString(), "Index", new { sortOrder = ViewBag.EmailSortParm })
        </th>
        <th>
            @Html.ActionLink(@Html.DisplayNameFor(model => model.Role).ToString(), "Index", new { sortOrder = ViewBag.RolSortParm })
        </th>
        <th>Acciones</th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.FirstName)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.LastName)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.DocType)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.DocNumber)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.BirthDate)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Email)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Role)
        </td>
        <td>
            @Html.ActionLink("Detalles", "Details", new { id = item.ClientID }) |
            @Html.ActionLink("Editar", "Edit", new { id=item.ClientID }) |
            @Html.ActionLink("Borrar", "Delete", new { id=item.ClientID })
            @if((Catalog.Roles)item.Role == Catalog.Roles.Client)
            {
                @:| 
                @Html.ActionLink("Historial médico", "Details" , "MedicalRecords", new { id = item.ClientID }, null) 
                @:| 
                @Html.ActionLink("Rutina", "Details", "Routines", new { id = item.ClientID }, null)
            }
        </td>
    </tr>
}
</table>
@Html.Raw(@Html.Pager((IPagination)Model)
                .Format("Mostrando {0}-{1} de {2} | ")
                .First("Primero")
                .Previous("Anterior")
                .Next("Siguiente")
                .Last("Último")
         )